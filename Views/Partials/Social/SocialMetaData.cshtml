@*@inherits Umbraco.Web.Mvc.UmbracoTemplatePage*@
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using System.Globalization;
@using System.Web;

@using Umbraco.Core.PropertyEditors.ValueConverters;
@using Newtonsoft.Json;
@{
    string ogImage = ViewBag.OgImage as string;
    string twitterImage = ViewBag.twitterImage as string;
    var ogImageStr = Model.Value<IPublishedContent>("openGraphImage");
    var imageSource = "";

    //if viewbag og image is not set, use the one set on the page
    if (ogImageStr !=null)
    {
        if (string.IsNullOrEmpty(ogImage))
        {
            //var ogImageCrops = JsonConvert.DeserializeObject<ImageCropperValue>(ogImageStr);
            ogImage = ogImageStr.GetCropUrl("facebook-large"); //1200px x 630px
            imageSource = "OG Image";
        }

        if (string.IsNullOrEmpty(twitterImage))
        {
            //var ogImageCrops = JsonConvert.DeserializeObject<ImageCropperValue>(ogImageStr);
            twitterImage = ogImageStr.GetCropUrl("twitter-card-large"); //600px x 314px
            imageSource = "OG Image";
        }
    }
    //Use Default image
    else
    {
        //not set
    }

    var configuration = Model.Descendants("configurationFolder").FirstOrDefault();
    var siteName = configuration != null ? configuration.Value<string>("siteName") : "";

}
@* Open Graph Tags for Social Sharing*@
<meta property='og:locale' content='@CultureInfo.CurrentCulture.ToString().Replace("-","_")' />
<meta property='og:type' content='website' />
<meta property='og:title' content='@Model.Value("pageTitle")' />
<meta property='og:description' content='@Model.Value("openGraphDescription")' />
<meta property='og:url' content='@Request.Url.GetLeftPart(UriPartial.Authority)@Request.FilePath' />
<meta property='og:site_name' content='@siteName' />
@if (!string.IsNullOrEmpty(ogImage))
{
    <meta property='og:image' content='@Html.Raw(ogImage)' />
}

@* Twitter Card specifics *@
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@(Model.Value("twitterHandle"))" />
<meta name="twitter:description" content="@Model.Value("openGraphDescription")">
@if (!string.IsNullOrEmpty(twitterImage))
{
    <meta name="twitter:image" content="@Html.Raw(twitterImage)" />
}
